# Drawing from: https://github.com/ogrisel/python-appveyor-demo/blob/master/appveyor.yml

environment:
  global:
    MINGW_PATH: "C:\\mingw-w64\\x86_64-6.3.0-posix-seh-rt_v5-rev1\\mingw64"
    
    # SDK v7.0 MSVC Express 2008's SetEnv.cmd script will fail if the
    # /E:ON and /V:ON options are not enabled in the batch script intepreter
    # See: http://stackoverflow.com/a/13751649/163740
    CMD_IN_ENV: "cmd /E:ON /V:ON /C %APPVEYOR_BUILD_FOLDER%\\.appveyor\\run_with_env.cmd"
    
    # FVS_VARIANTS: "pnc;wcc;soc;cac;ecc;oc;op"
    FVS_VARIANTS: "pnc"
    
    TWINE_PASSWORD:
        secure: lLhgSTVGnQNINPD18gIe2g==
    TWINE_USERNAME: tod.haren
    
    MPLBACKEND: "agg"
    
  matrix:
    # https://www.appveyor.com/docs/build-environment/#miniconda
    
    - MINICONDA: "C:\\Miniconda-x64"
      PYTHON_VERSION: "2.7"
      PYTHON_ARCH: "64"
      
    - MINICONDA: "C:\\Miniconda3-x64"
      PYTHON_VERSION: "3.4"
      PYTHON_ARCH: "64"
    
    # - MINICONDA: "C:\\Miniconda35-x64"
      # PYTHON_VERSION: "3.5"
      # PYTHON_ARCH: "64"

    # - MINICONDA: "C:\\Miniconda36-x64"
      # PYTHON_VERSION: "3.6"
      # PYTHON_ARCH: "64"
    
init:
    # Display remote desktop details
    - ps: iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))
    - echo PYTHON_VERSION - %PYTHON_VERSION%
    - echo MINICONDA - %MINICONDA%
    
install:
    # Parse the version number
    - ps: $env:pkg_version = (select-string -Path .\python\pyfvs\_version.py -Pattern "__version__[ =']+(.*)\'" -AllMatches|%{$_.Matches}|%{$_.Groups[1]}|%{$_.Value}).Trim()
    - ps: Update-AppveyorBuild -Version "$env:pkg_version-$env:APPVEYOR_BUILD_NUMBER"
    
    # Setup the python environment and install required packages
    - set PATH=%MINICONDA%;%MINICONDA%\Scripts;%PATH%
    - set PATH=%MINGW_PATH%\bin;%PATH%
    - conda config --set always_yes yes --set changeps1 no
    - conda config --add channels conda-forge
    - conda update -q conda
    # Edit the environment.yml file for the target Python version
    - call sed -i -E 's/(python=)(.*)/\1'%PYTHON_VERSION%'/' ./environment.yml
    - conda env create -q -n pyfvs -f environment.yml
    - conda info -a
    - call activate pyfvs
    
build_script:
    # Configure the CMake project and execute the build
    - call .appveyor\\config_and_build.bat

after_build:
    # Create a zip file package of the compiled libraries and python package
    - "%APPVEYOR_BUILD_FOLDER%\\.appveyor\\bundle_archive.bat"

test_script:
    # Run tests against the final package
    - conda install matplotlib
    - call "%APPVEYOR_BUILD_FOLDER%\\.appveyor\\run_tests.bat"

on_success:
  # Adapted from: https://github.com/AndrewAnnex/SpiceyPy/blob/master/appveyor.yml
  - conda install twine --yes -c conda-forge
  - call %APPVEYOR_BUILD_FOLDER%\\.appveyor\\deploy_pypi.bat

on_failure:
    # Post error logs to the build log
    - appveyor PushArtifact %APPVEYOR_BUILD_FOLDER%\\bin\\build\\build_err.log
    - appveyor PushArtifact %APPVEYOR_BUILD_FOLDER%\\bin\\build\\pypnc_f2py.log
    
    # Report remote desktop connection parameters and wait
    - ps: $blockRdp = $true; iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))
    
artifacts:
    - path: pyfvs*.zip
      name: pyfvs-zip
      type: zip

    - path: pyfvs*.whl
      name: pyfvs-wheel
      type: whl

deploy:
  - provider: GitHub
    # release: myproduct-v$(appveyor_build_version)
    description: 'Appveyor CI tag build.'
    auth_token:
      secure: Pi+Rn4LnPIHYZJ6uMQa4im0nQvZ6YMoBsGiGwzEpe1ZcJsunZ9D/snlNfjLlvA2w
    # artifact: pyfvs-zip pyfvs-wheel # Using artifact name works consistently
    artifact: pyfvs-wheel
    draft: true
    prerelease: false
    force_update: true
    on:
      # branch: master                 # release from master branch only
      appveyor_repo_tag: true        # deploy on tag push only

  - provider: S3
    access_key_id: AKIAIVJ4GCLXEX2KK5QQ
    secret_access_key:
      secure: 3i/lHf5+t5tHVnX5dM/iHO9vOuvEZk65jCR94F1QSObHs8X5D1ZkY+BLW4fetlLC
    region: us-west-2
    bucket: free5
    set_public: true
    folder: pyfvs/%APPVEYOR_REPO_BRANCH%
    artifact: pyfvs-zip pyfvs-wheel

# on_finish:
  # # Pause the build for remote desktop access
  # - ps: $blockRdp = $true; iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))
